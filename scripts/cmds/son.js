module.exports.config = {
    name: "son",
    category: "automation",
    author: "Romim√óBaYjid",
    role: 2,
};

const userResponses = {};

module.exports.onStart = async function({ api, event, usersData }) {
    const mention = Object.keys(event.mentions)[0]; 
    if (!mention) return api.sendMessage("‚ùå ‡¶¶‡ßü‡¶æ ‡¶ï‡¶∞‡ßá ‡¶è‡¶ï‡¶ú‡¶®‡¶ï‡ßá ‡¶Æ‡ßá‡¶®‡¶∂‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®!", event.threadID);

    api.getUserInfo(mention, async (err, userInfo) => {
        if (err) {
            console.error("‚ö†Ô∏è Failed to retrieve user information:", err);
            return api.sendMessage("‚ùå ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡ßá‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶Ü‡¶®‡¶§‡ßá ‡¶¨‡ßç‡¶Ø‡¶∞‡ßç‡¶•!", event.threadID);
        }

        let genderText;
        switch (userInfo[mention].gender) {
            case 1:
                genderText = "‡¶Æ‡¶æ‡¶á‡¶Ø‡¶º‡¶æ";
                break;
            case 2:
                genderText = "‡¶™‡ßã‡¶≤‡¶æ";
                break;
            default:
                genderText = "‡¶π‡¶ø‡¶ú‡¶°‡¶º‡¶æ";
        }

        const insults = [
            `‡¶ñ‡¶æ‡¶Ç‡¶ï‡¶ø‡¶∞ ${genderText}, ‡¶§‡ßã‡¶∞ ‡¶Æ‡¶æ‡¶∞ ‡¶≠‡ßã‡¶¶‡¶æ ‡¶§‡ßá ‡¶ó‡¶æ‡¶ß‡¶æ‡¶∞ ‡¶Æ‡¶æ‡¶≤ ‡¶´‡¶æ‡¶≤‡¶æ‡¶¨‡ßã! üòà`,
            `‡¶§‡ßã‡¶∞ ‡¶Æ‡¶æ ‡¶ï‡ßá ‡¶ö‡ßÅ‡¶¶‡ßá ‡¶ö‡ßÅ‡¶¶‡ßá ‡¶™‡¶≤‡ßç‡¶ü‡¶ø ‡¶Æ‡¶æ‡¶∞‡¶¨‡ßã, ‡¶ó‡¶æ‡¶ß‡¶æ‡¶∞ ${genderText}! üò°`,
            `‡¶¨‡¶æ‡¶°‡¶º‡¶ø‡¶∞ ‡¶™‡¶æ‡¶∂‡ßá ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶Æ‡¶æ‡¶≤ ‡¶´‡ßá‡¶≤‡ßá ‡¶¶‡¶ø‡ßü‡ßá ‡¶§‡ßã‡¶∞ ‡¶Æ‡¶æ ‡¶ï‡ßá ‡¶ö‡ßÅ‡¶¶‡¶§‡ßá ‡¶ö‡¶æ‡¶á! üî•`,
            `‡¶ö‡ßÅ‡¶¶‡¶æ ‡¶ñ‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶§‡ßã‡¶∞ ‡¶Æ‡¶æ‡¶∞, ‡¶Ü‡¶Æ‡¶ø ‡¶§‡ßã‡¶∞ ‡¶Æ‡¶æ‡¶∞ ‡¶≠‡ßã‡¶¶‡¶æ‡¶Ø‡¶º ‡¶ü‡¶æ‡¶® ‡¶¶‡¶ø‡¶¨‡ßã! üí£`,
            `‡¶§‡ßã‡¶∞ ‡¶Æ‡¶æ‡¶∞ ‡¶ó‡ßÅ‡¶¶‡ßá ‡¶´‡ßÅ‡¶≤ ‡¶ü‡ßç‡¶Ø‡¶æ‡¶¨‡¶≤‡ßá‡¶ü ‡¶™‡ßÅ‡¶∂ ‡¶ï‡¶∞‡ßá, ‡¶ó‡¶æ‡¶ß‡¶æ‡¶∞ ${genderText}! üòõ`,
            `‡¶§‡ßã‡¶∞ ‡¶¨‡ßã‡¶®‡ßá‡¶∞ ‡¶Æ‡ßÅ‡¶ñ‡ßá ‡¶Æ‡¶æ‡¶≤ ‡¶´‡¶æ‡¶≤‡¶æ‡¶®‡ßã‡¶∞ ‡¶ï‡¶•‡¶æ ‡¶≠‡¶æ‡¶¨‡¶ø, ‡¶Æ‡¶æ‡¶ó‡ßÄ ${genderText}!`,
            `‡¶§‡ßã‡¶∞ ‡¶Æ‡¶æ‡¶ï‡ßá ‡¶ó‡¶æ‡¶ß‡¶æ‡¶∞ ‡¶Æ‡¶§‡ßã ‡¶ö‡ßÅ‡¶¶‡ßá ‡¶§‡ßã‡¶∞ ‡¶Æ‡¶æ ‡¶¨‡¶≤‡¶¨ "‡¶è‡¶ü‡¶æ ‡¶ï‡¶æ‡¶∞ ‡¶Æ‡¶æ‡¶≤?"`,
            `‡¶§‡ßã‡¶∞ ‡¶Æ‡¶æ‡¶∞ ‡¶ó‡ßÅ‡¶¶‡ßá ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶Ü‡¶â‡¶ü‡¶™‡ßÅ‡¶ü ‡¶®‡ßá‡¶¨‡ßã, ‡¶™‡ßã‡¶≤‡¶æ‡¶™‡¶æ‡¶á‡¶® ${genderText}!`,
            `‡¶§‡ßã‡¶∞ ‡¶Æ‡¶æ‡¶∞ ‡¶≠‡ßã‡¶¶‡¶æ‡¶Ø‡¶º ‡¶ó‡¶æ‡¶ß‡¶æ‡¶∞ ‡¶Æ‡¶§‡ßã ‡¶Æ‡¶æ‡¶≤ ‡¶´‡¶æ‡¶≤‡¶ø‡¶Ø‡¶º‡ßá ‡¶¶‡ßá‡¶¨‡ßã, ‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶∞‡¶æ‡¶§‡ßá‡¶á! üî•`,
            `‡¶è‡¶ñ‡¶® ‡¶Æ‡¶æ‡¶ó‡ßÄ‡¶∞ ${genderText} ‡¶§‡ßã‡¶∞ ‡¶Æ‡¶æ‡¶∞ ‡¶≠‡ßã‡¶¶‡¶æ ‡¶ö‡ßÅ‡¶¶‡ßá, ‡¶è‡¶ï ‡¶ü‡ßÅ‡¶ï‡¶∞‡¶æ ‡¶¶‡ßá‡¶¨‡ßã! üò†`,
            `‡¶§‡ßã‡¶∞ ‡¶Æ‡¶æ ‡¶ï‡ßá ‡¶ö‡ßÅ‡¶¶‡ßá ‡¶™‡¶≤‡ßç‡¶ü‡¶ø ‡¶Æ‡¶æ‡¶∞‡¶¨‡ßã, ‡¶ó‡¶æ‡¶ß‡¶æ‡¶∞ ${genderText}! ü§°`,
        ];

        let index = 0;
        api.sendMessage(`üòÜ ‡¶ï‡¶ø‡¶∞‡ßá ${event.mentions[mention]}! ‡¶ï‡ßá‡¶Æ‡¶® ‡¶Ü‡¶õ‡¶ø‡¶∏..?`, event.threadID);

        if (!userResponses[mention]) {
            userResponses[mention] = { index: 0 };
        }

        api.listenMqtt((err, message) => {
            if (err) {
                console.error("‚ö†Ô∏è MQTT Listener Error:", err);
                return;
            }
            if (message.senderID === mention && message.body) {
                const currentIndex = userResponses[mention].index;
                api.sendMessage(insults[currentIndex % insults.length], message.threadID, message.messageID);
                userResponses[mention].index++;
            }
        });
    });
};
